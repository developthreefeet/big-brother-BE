# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "ci-cd" ]
permissions:
  contents: read
  
jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # 1. Java 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 2. Spring Boot 애플리케이션 빌드
    
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: clean bootJar
  
    # 3. Docker 이미지 빌드
    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/big-brother-demo:latest .

   # 4. DockerHub 로그인
    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

  # 5. Docker Hub 이미지 푸시
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/big-brother-demo

  ## 푸시한 임지를 ec2에서 풀받아서 실행시키는 과정
  run-docker-image-on-ec2:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      # 1. 최신 이미지를 풀받는다.,
      - name: docker pull
        run: sudo docker pull ${{secrets.DOCERHUB_USERNAME}}/big-brother-demo

      # 2. 기존의 컨테이너를 중지시킵니다.
      - name: docker stop container
        # 모든 컨테이너를 중지시킴.
        run: sudo docker stop $(sudo docker ps -q) 2>/dev/null || true
      # 3. 최신 이미지를 컨테이너화하여 실행시킨다.
      - name: docker run new container
        run: sudo docker run --name github-actions-demo --rm -d -p 8080:8080 --env-file ./env1.list ${{ secrets.DOCKERHUB_USERNAME }}/big-brother-demo

      # 4. 미사용 이미지를 정리합니다.
      - name: delete old docker image
        run: sudo docker system prune -f
